events {
    worker_connections 1024;
}

http {
    # Upstream definitions for MCP servers
    upstream kms_mcp {
        server kms-mcp:3001;
    }
    
    upstream coaching_mcp {
        server coaching-mcp:3002;
    }
    
    upstream mongodb_mcp {
        server mongodb-mcp:3003;
    }
    
    upstream neo4j_mcp {
        server neo4j-mcp:3004;
    }

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=mcp_limit:10m rate=100r/s;

    server {
        listen 80;
        server_name mcp.yaker.org;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;

        # CORS headers for MCP
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Authorization, Content-Type" always;

        # Route based on path prefix
        # Each MCP gets its own namespace
        
        # Unified KMS MCP (default/main)
        location / {
            proxy_pass http://kms_mcp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # SSE support for MCP streaming
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            
            # Rate limiting
            limit_req zone=mcp_limit burst=20 nodelay;
        }

        # KMS MCP alternate path
        location /kms/ {
            rewrite ^/kms/(.*) /$1 break;
            proxy_pass http://kms_mcp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            limit_req zone=mcp_limit burst=20 nodelay;
        }

        # Coaching Admin MCP
        location /coaching/ {
            rewrite ^/coaching/(.*) /$1 break;
            proxy_pass http://coaching_mcp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            limit_req zone=mcp_limit burst=20 nodelay;
        }

        # MongoDB Personal MCP
        location /mongodb/ {
            rewrite ^/mongodb/(.*) /$1 break;
            proxy_pass http://mongodb_mcp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            limit_req zone=mcp_limit burst=20 nodelay;
        }

        # Neo4j Knowledge MCP
        location /neo4j/ {
            rewrite ^/neo4j/(.*) /$1 break;
            proxy_pass http://neo4j_mcp;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_cache off;
            proxy_read_timeout 86400s;
            proxy_send_timeout 86400s;
            limit_req zone=mcp_limit burst=20 nodelay;
        }

        # Health check endpoint
        location /health {
            access_log off;
            add_header Content-Type text/plain;
            return 200 "MCP Gateway Healthy\n";
        }

        # MCP directory/discovery endpoint
        location /directory {
            default_type application/json;
            return 200 '{
                "services": {
                    "kms": {
                        "name": "Unified KMS",
                        "url": "https://mcp.yaker.org/kms/mcp",
                        "description": "Unified Knowledge Management System"
                    },
                    "coaching": {
                        "name": "Coaching Admin",
                        "url": "https://mcp.yaker.org/coaching/mcp",
                        "description": "Coaching Clone Administration"
                    },
                    "mongodb": {
                        "name": "MongoDB Personal",
                        "url": "https://mcp.yaker.org/mongodb/mcp",
                        "description": "Personal MongoDB Storage"
                    },
                    "neo4j": {
                        "name": "Neo4j Knowledge",
                        "url": "https://mcp.yaker.org/neo4j/mcp",
                        "description": "Neo4j Knowledge Graph"
                    }
                }
            }';
        }
    }
}