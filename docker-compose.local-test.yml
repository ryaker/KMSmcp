version: '3.8'

services:
  # MCP Gateway - Routes all traffic
  mcp-gateway:
    build: 
      context: ./gateway
      dockerfile: Dockerfile.gateway
    container_name: mcp-gateway
    ports:
      - "8080:80"  # Access at http://localhost:8080
    environment:
      - PORT=80
      - NODE_ENV=development
      # OAuth config (disabled for initial testing)
      - OAUTH_ENABLED=false
      - OAUTH_ISSUER=https://your-auth.auth0.com
      - OAUTH_JWKS_URI=https://your-auth.auth0.com/.well-known/jwks.json
      - OAUTH_CLIENT_ID=your-client-id
      - OAUTH_CLIENT_SECRET=your-client-secret
      # Internal service URLs
      - KMS_MCP_URL=http://kms-mcp:3001
      - COACHING_MCP_URL=http://coaching-mcp:3002
      - MONGODB_MCP_URL=http://mongodb-mcp:3003
      - NEO4J_MCP_URL=http://neo4j-mcp:3004
      # Service audiences
      - KMS_AUDIENCE=http://localhost:8080/kms
      - COACHING_AUDIENCE=http://localhost:8080/coaching
      - MONGODB_AUDIENCE=http://localhost:8080/mongodb
      - NEO4J_AUDIENCE=http://localhost:8080/neo4j
    depends_on:
      - kms-mcp
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # KMS MCP Service (your existing service)
  kms-mcp:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: kms-mcp
    expose:
      - "3001"
    environment:
      - TRANSPORT_MODE=http
      - HTTP_PORT=3001
      - HTTP_HOST=0.0.0.0
      - NODE_ENV=development
      # OAuth settings
      - OAUTH_ENABLED=false  # Match gateway setting
      - OAUTH_ISSUER=https://your-auth.auth0.com
      - OAUTH_AUDIENCE=http://localhost:8080/kms
      # Service credentials (use test/local versions)
      - MEM0_API_KEY=${MEM0_API_KEY:-test-mem0-key}
      - MEM0_ORG_ID=${MEM0_ORG_ID:-test-org}
      - MONGODB_ATLAS_URI=${MONGODB_ATLAS_URI:-mongodb://mongodb:27017}
      - MONGODB_DATABASE=unified_kms_test
      - NEO4J_AURA_URI=${NEO4J_AURA_URI:-bolt://neo4j:7687}
      - NEO4J_AURA_USERNAME=${NEO4J_AURA_USERNAME:-neo4j}
      - NEO4J_AURA_PASSWORD=${NEO4J_AURA_PASSWORD:-testpassword}
      - REDIS_URI=redis://redis:6379
    depends_on:
      - mongodb
      - neo4j
      - redis
    networks:
      - mcp-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Stub services for other MCPs (for testing routing)
  coaching-mcp:
    image: nginx:alpine
    container_name: coaching-mcp
    expose:
      - "3002"
    volumes:
      - ./test/stubs/coaching-stub.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - mcp-network

  mongodb-mcp:
    image: nginx:alpine
    container_name: mongodb-mcp
    expose:
      - "3003"
    volumes:
      - ./test/stubs/mongodb-stub.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - mcp-network

  neo4j-mcp:
    image: nginx:alpine
    container_name: neo4j-mcp
    expose:
      - "3004"
    volumes:
      - ./test/stubs/neo4j-stub.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - mcp-network

  # Local databases for testing
  mongodb:
    image: mongo:7
    container_name: mcp-test-mongodb
    expose:
      - "27017"
    environment:
      - MONGO_INITDB_DATABASE=unified_kms_test
    volumes:
      - mongodb-test-data:/data/db
    networks:
      - mcp-network

  neo4j:
    image: neo4j:5
    container_name: mcp-test-neo4j
    expose:
      - "7687"
      - "7474"
    environment:
      - NEO4J_AUTH=neo4j/testpassword
      - NEO4J_apoc_export_file_enabled=true
      - NEO4J_apoc_import_file_enabled=true
      - NEO4J_apoc_import_file_use__neo4j__config=true
    volumes:
      - neo4j-test-data:/data
    networks:
      - mcp-network

  redis:
    image: redis:7-alpine
    container_name: mcp-test-redis
    expose:
      - "6379"
    volumes:
      - redis-test-data:/data
    networks:
      - mcp-network

networks:
  mcp-network:
    driver: bridge

volumes:
  mongodb-test-data:
  neo4j-test-data:
  redis-test-data: